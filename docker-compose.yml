services:
  ysweet:
    build: .
    container_name: ysweet
    environment:
      Y_SWEET_STORAGE_PATH: s3://ysweet-data
      AWS_ACCESS_KEY_ID: ysweetadmin
      AWS_SECRET_ACCESS_KEY: ysweetsecret
      AWS_REGION: us-east-1
      AWS_ENDPOINT_URL_S3: http://minio:9000
      AWS_S3_USE_PATH_STYLE: "true"
    ports:
      - "8080:8080"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8080 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 15s
    depends_on:
      minio:
        condition: service_started
      minio-create-bucket:
        condition: service_completed_successfully

  auth:
    build:
      context: ./backend
      dockerfile: Dockerfile.auth
    container_name: ysweet-auth
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - CONNECTION_STRING=ys://ysweet:8080
      - CLIENT_DIR=/app/client
      - PUBLIC_YSWEET_URL=ws://localhost:8080
    restart: unless-stopped
    depends_on:
      ysweet:
        condition: service_healthy
    volumes:
      - ./client:/app/client:ro

  minio:
    image: minio/minio:RELEASE.2024-09-22T00-33-43Z
    container_name: ysweet-minio
    environment:
      MINIO_ROOT_USER: ysweetadmin
      MINIO_ROOT_PASSWORD: ysweetsecret
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  minio-create-bucket:
    image: minio/mc:RELEASE.2024-09-16T17-43-14Z
    container_name: ysweet-minio-mc
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ysweetadmin
      MINIO_ROOT_PASSWORD: ysweetsecret
      MINIO_BUCKET: ysweet-data
    entrypoint: >-
      /bin/sh -c "
        set -euo pipefail;
        until mc alias set ysweet http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD}; do
          echo 'Waiting for MinIO...';
          sleep 3;
        done;
        mc mb -p ysweet/$${MINIO_BUCKET} || mc ls ysweet/$${MINIO_BUCKET};
      "
    restart: "no"

volumes:
  minio-data:
